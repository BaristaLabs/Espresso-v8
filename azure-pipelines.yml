jobs:
- job: CheckReleaseStatus
  displayName: "Determines what builds are necessary."
  steps:
    - task: PowerShell@2
      name: release_status
      displayName: "Checks release status between stable and published"
      inputs:
        filePath: "scripts/checkReleaseStatus.ps1"
      
- job: Build_VS2019
  displayName: "Build v8 on Windows"
  dependsOn: CheckReleaseStatus
  condition: and(succeeded(), eq(dependencies.CheckReleaseStatus.outputs['release_status.build_windows'], 'true'))
  variables:
    V8_VERSION_WINDOWS: $[ dependencies.CheckReleaseStatus.outputs['release_status.V8_VERSION_WINDOWS'] ]
    STATIC: 'false'
  pool:
    vmImage: 'windows-2019'
  strategy:
    matrix:
      x86:
        CONFIGURATION: 'ia32.release'
      x64:
        CONFIGURATION: 'x64.release'
  steps:
    - template: templates/windows-build-steps.yml
- job: Build_VS2019_STATIC
  displayName: "Build v8 static on Windows"
  dependsOn: CheckReleaseStatus
  condition: and(succeeded(), eq(dependencies.CheckReleaseStatus.outputs['release_status.build_windows_static'], 'true'))
  variables:
    V8_VERSION_WINDOWS: $[ dependencies.CheckReleaseStatus.outputs['release_status.V8_VERSION_WINDOWS_STATIC'] ]
    STATIC: $[ dependencies.CheckReleaseStatus.outputs['release_status.build_windows_static'] ]
    CONFIGURATION: 'x64.release'
  pool:
    vmImage: 'windows-2019'
  steps:
    - template: templates/windows-build-steps.yml
- job: Build_macOS
  displayName: "Build v8 on macOS"
  dependsOn: CheckReleaseStatus
  condition: and(succeeded(), eq(dependencies.CheckReleaseStatus.outputs['release_status.build_macOS'], 'true'))
  variables:
    V8_VERSION_MACOS: $[ dependencies.CheckReleaseStatus.outputs['release_status.V8_VERSION_MACOS'] ]
  pool:
    vmImage: 'macOS-10.14'
  strategy:
    matrix:
      x64:
        CONFIGURATION: 'x64.release'
  steps:
    - task: NuGetToolInstaller@0
      displayName: "Ensure a recent version of NuGet"
      inputs:
        versionSpec: '4.9.x'
    - task: PowerShell@2
      displayName: "Initialize v8 build environment"
      inputs:
        filePath: "scripts/macOS/macOS-build-v8-1.ps1"
    - task: PowerShell@2
      displayName: "Fetch v8 from source for the specified version"
      inputs:
        filePath: "scripts/macOS/macOS-build-v8-2.ps1"
        arguments:  "-V8_VERSION $(V8_VERSION_MACOS)"
    - task: PowerShell@2
      displayName: "Build v8 according to specified configuration"
      inputs:
        filePath: "scripts/macOS/macOS-build-v8-3.ps1"
    - task: PowerShell@2
      displayName: "Generate NuGet .nuspec files according to specified configuration"
      inputs:
        filePath: "scripts/macOS/macOS-build-v8-4.ps1"
    - task: NuGetCommand@2
      displayName: "Create NuGet Packages"
      inputs:
        command: pack
        packagesToPack: "*.nuspec"
    - task: NuGetCommand@2
      displayName: "Push NuGet Packages to NuGet Feed"
      inputs:
        command: push
        nuGetFeedType: external
        publishFeedCredentials: 'nuget.org'
- job: Build_ubuntu
  displayName: "Build v8 on Ubuntu"
  dependsOn: CheckReleaseStatus
  condition: and(succeeded(), eq(dependencies.CheckReleaseStatus.outputs['release_status.build_ubuntu'], 'true'))
  variables:
    V8_VERSION_UBUNTU: $[ dependencies.CheckReleaseStatus.outputs['release_status.V8_VERSION_UBUNTU'] ]
  pool:
    vmImage: 'ubuntu-16.04'
  strategy:
    matrix:
      x64:
        CONFIGURATION: 'x64.release'
  steps:
    - task: NuGetToolInstaller@0
      displayName: "Ensure a recent version of NuGet"
      inputs:
        versionSpec: '4.9.x'
    - task: PowerShell@2
      displayName: "Initialize v8 build environment"
      inputs:
        filePath: "scripts/ubuntu/ubuntu-build-v8-1.ps1"
    - task: PowerShell@2
      displayName: "Fetch v8 from source for the specified version"
      inputs:
        filePath: "scripts/ubuntu/ubuntu-build-v8-2.ps1"
        arguments:  "-V8_VERSION $(V8_VERSION_UBUNTU)"
        errorActionPreference: continue
        ignoreLASTEXITCODE: true
        continueOnError: true # As of 7.5.288.23, Azure DevOps fails to start PHP-FPM as installed as part of Chromium build tools.
    - task: PowerShell@2
      displayName: "Build v8 according to specified configuration"
      inputs:
        filePath: "scripts/ubuntu/ubuntu-build-v8-3.ps1"
    - task: PowerShell@2
      displayName: "Generate NuGet .nuspec files according to specified configuration"
      inputs:
        filePath: "scripts/ubuntu/ubuntu-build-v8-4.ps1"
    - task: NuGetCommand@2
      displayName: "Create NuGet Packages"
      inputs:
        command: pack
        packagesToPack: "*.nuspec"
    - task: NuGetCommand@2
      displayName: "Push NuGet Packages to NuGet Feed"
      inputs:
        command: push
        nuGetFeedType: external
        publishFeedCredentials: 'nuget.org'